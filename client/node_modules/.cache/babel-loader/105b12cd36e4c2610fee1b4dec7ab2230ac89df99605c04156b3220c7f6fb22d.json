{"ast":null,"code":"var _jsxFileName = \"/Users/sheryee/Desktop/Bookies/client/src/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { UserContext } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const {\n    userInfo\n  } = useContext(UserContext);\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n  const [user, setUser] = useState({\n    name: userInfo.username,\n    bio: \"\",\n    avatar: \"\"\n  });\n  const [editMode, setEditMode] = useState(false);\n  const [tempBio, setBio] = useState(\"\");\n  const [tempAvatar, setAvatar] = useState(\"\");\n  useEffect(() => {\n    fetch('http://localhost:4000/user', {\n      credentials: 'include'\n    }).then(res => res.json()).then(user => {\n      setUser({\n        name: user.username,\n        bio: user.bio || \"\",\n        avatar: user.avatar || \"\"\n      });\n      setBio(user.bio || \"\");\n      setAvatar(user.avatar || \"\");\n    });\n  }, []);\n  const saveChanges = async () => {\n    setUser({\n      ...user,\n      bio: tempBio,\n      avatar: tempAvatar\n    });\n    setEditMode(false);\n    await fetch('http://localhost:4000/profile', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        bio: tempBio,\n        avatar: tempAvatar\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: userInfo.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"labe\", {\n        children: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Paste an image link here\",\n        value: tempAvatar,\n        onChange: e => setAvatar(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Bio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Add a bio\",\n        value: tempBio,\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveChanges,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [user.avatar && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.avatar,\n        alt: \"Profile\",\n        className: \"profile-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"profile-name\",\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Bio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"profile-bio\",\n        children: user.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditMode(true),\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"g//p7uV7//4CB43rko5k4SKTNTM=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Navigate","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePage","_s","userInfo","to","fileName","_jsxFileName","lineNumber","columnNumber","user","setUser","name","username","bio","avatar","editMode","setEditMode","tempBio","setBio","tempAvatar","setAvatar","fetch","credentials","then","res","json","saveChanges","method","headers","body","JSON","stringify","className","children","type","placeholder","value","onChange","e","target","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/sheryee/Desktop/Bookies/client/src/ProfilePage.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { UserContext } from \"./UserContext\";\n\n\nconst ProfilePage = () => {\n    const {userInfo} = useContext(UserContext);\n\n    if (!userInfo) {\n        return <Navigate to=\"/login\" />;\n    }\n\n    const [user, setUser] = useState({\n        name: userInfo.username,\n        bio: \"\",\n        avatar: \"\",\n    });\n\n    const [editMode, setEditMode] = useState(false); \n    const [tempBio, setBio] = useState(\"\");\n    const [tempAvatar, setAvatar] = useState(\"\");\n\n    useEffect(() => {\n        fetch('http://localhost:4000/user',{\n            credentials: 'include',\n        })\n            .then((res) => res.json())\n            .then((user) => {\n                setUser({\n                    name: user.username,\n                    bio: user.bio || \"\",\n                    avatar: user.avatar || \"\",\n                });\n            setBio(user.bio || \"\");\n            setAvatar(user.avatar || \"\");\n        });\n    }, []);\n\n\n\n    const saveChanges = async() => {\n        setUser({\n            ...user,\n            bio: tempBio,\n            avatar: tempAvatar,\n        });\n        setEditMode(false);\n\n        await fetch('http://localhost:4000/profile', {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n            bio: tempBio,\n            avatar: tempAvatar,\n        }),\n        });\n\n    };\n    \n    return (\n        <div className=\"profile-container\">\n            {\n                editMode? (\n                    <>\n                    <h1>{userInfo.username}</h1>\n                    <labe>Avatar</labe>\n                    <input \n                        type = \"text\" \n                        placeholder=\"Paste an image link here\"\n                        value={tempAvatar} \n                        onChange={(e) => setAvatar(e.target.value)} \n                    />\n                    <label>Bio</label>\n                    <textarea\n                        placeholder=\"Add a bio\"\n                        value={tempBio}\n                        onChange={(e) => setBio(e.target.value)}\n                    />\n                    <button onClick={saveChanges}>Save</button>\n                    </>\n                ) : (\n                    <>\n                    {user.avatar && (\n                        <img src={user.avatar} alt=\"Profile\" className=\"profile-avatar\" />\n                    )}\n                    <h1 className=\"profile-name\">{user.name}</h1>\n                    <label>Bio:</label>\n                    <p className=\"profile-bio\">{user.bio}</p>\n                    <button onClick={() => setEditMode(true)}>Edit Profile</button>\n                \n                    </>\n                )}\n        </div>\n    );\n};\n\nexport default ProfilePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}