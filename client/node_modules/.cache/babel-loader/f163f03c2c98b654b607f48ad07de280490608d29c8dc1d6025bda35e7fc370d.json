{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adeline\\\\Desktop\\\\Bookies\\\\client\\\\src\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const {\n    userInfo\n  } = useContext(UserContext);\n  const [user, setUser] = useState({\n    name: userInfo.username,\n    bio: \"\",\n    avatar: \"\"\n  });\n  const [editMode, setEditMode] = useState(false);\n  const [tempBio, setBio] = useState(\"\");\n  const [tempAvatar, setAvatar] = useState(\"\");\n  useEffect(() => {\n    fetch('http://localhost:4000/user', {\n      credentials: 'include'\n    }).then(res => res.json()).then(user => {\n      setUser({\n        name: user.username,\n        bio: user.bio || \"\",\n        avatar: user.avatar || \"\"\n      });\n      setBio(user.bio || \"\");\n      setAvatar(user.avatar || \"\");\n    });\n  }, []);\n  const saveChanges = async () => {\n    setUser({\n      ...user,\n      bio: tempBio,\n      avatar: tempAvatar\n    });\n    setEditMode(false);\n    await fetch('http://localhost:4000/profile', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        bio: tempBio,\n        avatar: tempAvatar\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: userInfo.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"labe\", {\n        children: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Paste an image link here\",\n        value: tempAvatar,\n        onChange: e => setAvatar(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Bio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Add a bio\",\n        value: tempBio,\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveChanges,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [user.avatar && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.avatar,\n        alt: \"Profile\",\n        className: \"profile-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"profile-name\",\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Bio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"profile-bio\",\n        children: user.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditMode(true),\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"oHoZC7aTElLozaPuFDg/wJ45R/o=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useContext","useEffect","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePage","_s","userInfo","user","setUser","name","username","bio","avatar","editMode","setEditMode","tempBio","setBio","tempAvatar","setAvatar","fetch","credentials","then","res","json","saveChanges","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Adeline/Desktop/Bookies/client/src/ProfilePage.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\n\r\nconst ProfilePage = () => {\r\n    const {userInfo} = useContext(UserContext);\r\n    const [user, setUser] = useState({\r\n        name: userInfo.username,\r\n        bio: \"\",\r\n        avatar: \"\",\r\n    });\r\n\r\n    const [editMode, setEditMode] = useState(false); \r\n    const [tempBio, setBio] = useState(\"\");\r\n    const [tempAvatar, setAvatar] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/user',{\r\n            credentials: 'include',\r\n        })\r\n            .then((res) => res.json())\r\n            .then((user) => {\r\n                setUser({\r\n                    name: user.username,\r\n                    bio: user.bio || \"\",\r\n                    avatar: user.avatar || \"\",\r\n                });\r\n            setBio(user.bio || \"\");\r\n            setAvatar(user.avatar || \"\");\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n    const saveChanges = async() => {\r\n        setUser({\r\n            ...user,\r\n            bio: tempBio,\r\n            avatar: tempAvatar,\r\n        });\r\n        setEditMode(false);\r\n\r\n        await fetch('http://localhost:4000/profile', {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n            bio: tempBio,\r\n            avatar: tempAvatar,\r\n        }),\r\n        });\r\n\r\n    };\r\n    \r\n    return (\r\n        <div className=\"profile-container\">\r\n            {\r\n                editMode? (\r\n                    <>\r\n                    <h1>{userInfo.username}</h1>\r\n                    <labe>Avatar</labe>\r\n                    <input \r\n                        type = \"text\" \r\n                        placeholder=\"Paste an image link here\"\r\n                        value={tempAvatar} \r\n                        onChange={(e) => setAvatar(e.target.value)} \r\n                    />\r\n                    <label>Bio</label>\r\n                    <textarea\r\n                        placeholder=\"Add a bio\"\r\n                        value={tempBio}\r\n                        onChange={(e) => setBio(e.target.value)}\r\n                    />\r\n                    <button onClick={saveChanges}>Save</button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                    {user.avatar && (\r\n                        <img src={user.avatar} alt=\"Profile\" className=\"profile-avatar\" />\r\n                    )}\r\n                    <h1 className=\"profile-name\">{user.name}</h1>\r\n                    <label>Bio:</label>\r\n                    <p className=\"profile-bio\">{user.bio}</p>\r\n                    <button onClick={() => setEditMode(true)}>Edit Profile</button>\r\n                \r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}